# This is a basic workflow that is manually triggered

name: Manual workflow

env:
  MY_VAR: "AT WORKFLOW LEVEL"


# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string
      deploy:
        description: 'Deploy?'
        default: true
        required: true
        type: boolean
      TARGET_ENVIRONMENT:
        type: environment
        default: tst
      environment:
        description: 'Environment'
        default: 'dev'
        required: true
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  example:
    runs-on: ubuntu-latest
    steps:
      - id: greeting
        run: |
          echo 'message=Value stored in step greeting' >> $GITHUB_OUTPUT
          echo 'status=My status' >> $GITHUB_OUTPUT
      - run: echo "Output value is 1 " ${{steps.greeting.outputs.message}}
      - run: echo "Output value is 2 " ${{steps.greeting.outputs.status}}
        
  contexts:
    env:
      MY_VAR: "AT JOB LEVEL"
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: ${{inputs.TARJET_ENVIRONMENT}}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Print
      # env:
      #   MY_VAR: "AT STEP LEVEL"
      run: |
        echo "Hello ${{ inputs.name }}"
        echo "Actor ${{ github.actor}}"
        echo "runid ${{ github.run-id}}"
        echo "sha ${{ github.sha}}"
        echo "ref ${{ github.ref}}"
        echo "repo ${{ github.repository}}"
        echo "MY_VAR ${{ env.MY_VAR}}"
        echo "MY_VAR global ${{ vars.MY_VAR}}"
        echo "MY_SECRET global ${{ secrets.MY_SECRET}}"
    - name: Deploy
      if: ${{ inputs.deploy }}
      run: echo "Deploying IN ${{inputs.TARGET_ENVIRONMENT}} with ${{vars.VARS}} :)"
      
